From 1ddb31b30748330a7f58cad9a67ab1c1f31ea8af Mon Sep 17 00:00:00 2001
From: Sebastian Bauer <mail@sebastianbauer.info>
Date: Tue, 9 Dec 2014 20:21:18 +0100
Subject: [PATCH] Added "amigaos-ppc" and "amigaos-ppc-clib2" Configure target.

Also applied some modifications for a possible AmigaOS port
targeting version 4.1. Some are based on AmiSSL.
---
 Configure                |   3 +
 apps/apps.c              |   2 +-
 apps/ca.c                |   2 +-
 crypto/cryptlib.c        |   4 +-
 crypto/cryptlib.h        |   7 +-
 crypto/pkcs7/bio_pk7.c   |   2 +-
 crypto/rand/Makefile     |   5 +-
 crypto/rand/rand_amiga.c | 182 +++++++++++++++++++++++++++++++++++++++++++++++
 crypto/rand/rand_egd.c   |   2 +-
 crypto/rand/rand_unix.c  |   4 +-
 crypto/txt_db/txt_db.c   |   6 +-
 crypto/ui/ui_openssl.c   |   8 ++-
 ssl/ssl_sess.c           |   3 +-
 ssl/t1_enc.c             |   4 ++
 14 files changed, 220 insertions(+), 14 deletions(-)
 create mode 100644 crypto/rand/rand_amiga.c

diff --git a/Configure b/Configure
index 541be9ec57d865f2b78253cde4737f1653fe33e9..6e99f258882a041e3954bf339d06c3a29db2440b 100755
--- a/Configure
+++ b/Configure
@@ -408,6 +408,9 @@ my %table=(
 "android-x86","gcc:-mandroid -I\$(ANDROID_DEV)/include -B\$(ANDROID_DEV)/lib -O3 -fomit-frame-pointer -Wall::-D_REENTRANT::-ldl:BN_LLONG ${x86_gcc_des} ${x86_gcc_opts}:".eval{my $asm=${x86_elf_asm};$asm=~s/:elf/:android/;$asm}.":dlfcn:linux-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
 "android-armv7","gcc:-march=armv7-a -mandroid -I\$(ANDROID_DEV)/include -B\$(ANDROID_DEV)/lib -O3 -fomit-frame-pointer -Wall::-D_REENTRANT::-ldl:BN_LLONG RC4_CHAR RC4_CHUNK DES_INT DES_UNROLL BF_PTR:${armv4_asm}:dlfcn:linux-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
 
+"amigaos-ppc","ppc-amigaos-gcc:-DOPENSSL_SYSNAME_AMIGAOS -DNO_FORK -DNO_SYS_UN_H -DNO_SYSLOG -DB_ENDIAN -DOPENSSL_NO_SPEED -O3 -fdata-sections -ffunction-sections -fomit-frame-pointer -Wall:::::BN_LLONG RC2_CHAR RC4_INDEX DES_INT DES_UNROLL:${no_asm}:dlfcn:bsd-gcc-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
+"amigaos-ppc-clib2","ppc-amigaos-gcc:-mcrt=clib2 -DNO_SYS_PARAM_H -DOPENSSL_SYSNAME_AMIGAOS -DNO_FORK -DNO_SYS_UN_H -DNO_SYSLOG -DB_ENDIAN -DOPENSSL_NO_SPEED -O3 -fdata-sections -ffunction-sections -fomit-frame-pointer -Wall:::::BN_LLONG RC2_CHAR RC4_INDEX DES_INT DES_UNROLL:${no_asm}:dlfcn:bsd-gcc-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
+
 #### *BSD [do see comment about ${BSDthreads} above!]
 "BSD-generic32","gcc:-DTERMIOS -O3 -fomit-frame-pointer -Wall::${BSDthreads}:::BN_LLONG RC2_CHAR RC4_INDEX DES_INT DES_UNROLL:${no_asm}:dlfcn:bsd-gcc-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
 "BSD-x86",	"gcc:-DL_ENDIAN -DTERMIOS -O3 -fomit-frame-pointer -Wall::${BSDthreads}:::BN_LLONG ${x86_gcc_des} ${x86_gcc_opts}:${x86_asm}:a.out:dlfcn:bsd-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
diff --git a/apps/apps.c b/apps/apps.c
index 3e18289a4b5b8968ce412e2bcbb208ea8e51954f..15aba54d9ef0280acf4668882534ddcef67ea823 100644
--- a/apps/apps.c
+++ b/apps/apps.c
@@ -2888,7 +2888,7 @@ double app_tminterval(int stop,int usertime)
 	return (ret);
 	}
 
-#elif defined(OPENSSL_SYS_NETWARE)
+#elif defined(OPENSSL_SYS_NETWARE) || (defined(OPENSSL_SYSNAME_AMIGAOS) && defined(CLIB2))
 #include <time.h>
 
 double app_tminterval(int stop,int usertime)
diff --git a/apps/ca.c b/apps/ca.c
index 613f5bee5cc3996def4f20fdbfd276cb8cd21610..677621ee0627d9ce5e5dee4800bb6278848e1206 100644
--- a/apps/ca.c
+++ b/apps/ca.c
@@ -82,7 +82,7 @@
 #    else
 #      include <unixlib.h>
 #    endif
-#  elif !defined(OPENSSL_SYS_VXWORKS) && !defined(OPENSSL_SYS_WINDOWS) && !defined(OPENSSL_SYS_NETWARE)
+#  elif !defined(OPENSSL_SYS_VXWORKS) && !defined(OPENSSL_SYS_WINDOWS) && !defined(OPENSSL_SYS_NETWARE) && !defined(OPENSSL_SYSNAME_AMIGAOS)
 #    include <sys/file.h>
 #  endif
 #endif
diff --git a/crypto/cryptlib.c b/crypto/cryptlib.c
index 0b77d8b7d0e05b73e237d9a64fc43c3bc13bb95a..d756bfd7f427d0dccd7d18d9a5a4bbacce9408b4 100644
--- a/crypto/cryptlib.c
+++ b/crypto/cryptlib.c
@@ -904,7 +904,7 @@ void OPENSSL_showfatal (const char *fmta,...)
 { va_list ap;
 
     va_start (ap,fmta);
-    vfprintf (stderr,fmta,ap);
+//    vfprintf (stderr,fmta,ap);
     va_end (ap);
 }
 int OPENSSL_isservice (void) { return 0; }
@@ -912,6 +912,7 @@ int OPENSSL_isservice (void) { return 0; }
 
 void OpenSSLDie(const char *file,int line,const char *assertion)
 	{
+#if 0
 	OPENSSL_showfatal(
 		"%s(%d): OpenSSL internal error, assertion failed: %s\n",
 		file,line,assertion);
@@ -922,6 +923,7 @@ void OpenSSLDie(const char *file,int line,const char *assertion)
 	raise(SIGABRT);
 	_exit(3);
 #endif
+#endif
 	}
 
 void *OPENSSL_stderr(void)	{ return stderr; }
diff --git a/crypto/cryptlib.h b/crypto/cryptlib.h
index d26f9630eade8a69e59def9922b84615bfcbbe8c..50d24bb0a791505ea5feaab6ac31eef500185f07 100644
--- a/crypto/cryptlib.h
+++ b/crypto/cryptlib.h
@@ -79,7 +79,12 @@
 extern "C" {
 #endif
 
-#ifndef OPENSSL_SYS_VMS
+#if defined(OPENSSL_SYSNAME_AMIGAOS)
+#define X509_CERT_AREA		"AmiSSL:"
+#define X509_CERT_DIR		"AmiSSL:certs"
+#define X509_CERT_FILE		"AmiSSL:cert.pem"
+#define X509_PRIVATE_DIR	"AmiSSL:private"
+#elif defined(OPENSSL_SYS_VMS)
 #define X509_CERT_AREA		OPENSSLDIR
 #define X509_CERT_DIR		OPENSSLDIR "/certs"
 #define X509_CERT_FILE		OPENSSLDIR "/cert.pem"
diff --git a/crypto/pkcs7/bio_pk7.c b/crypto/pkcs7/bio_pk7.c
index 0fd31e730ffab582f6dcb5ae06a416f2eaaf0657..f0384f515fe81ae29d12588918630a06000d56fd 100644
--- a/crypto/pkcs7/bio_pk7.c
+++ b/crypto/pkcs7/bio_pk7.c
@@ -56,7 +56,7 @@
 #include <openssl/pkcs7.h>
 #include <openssl/bio.h>
 
-#if !defined(OPENSSL_SYSNAME_NETWARE) && !defined(OPENSSL_SYSNAME_VXWORKS)
+#if !defined(OPENSSL_SYSNAME_NETWARE) && !defined(OPENSSL_SYSNAME_VXWORKS) && !defined(OPENSSL_SYSNAME_AMIGAOS)
 #include <memory.h>
 #endif
 #include <stdio.h>
diff --git a/crypto/rand/Makefile b/crypto/rand/Makefile
index 27694aa66498935d1327697c9c8a0a3035891476..ea287f77beca6ea4c07f566d8d20a57bb05d46f4 100644
--- a/crypto/rand/Makefile
+++ b/crypto/rand/Makefile
@@ -18,9 +18,9 @@ APPS=
 
 LIB=$(TOP)/libcrypto.a
 LIBSRC=md_rand.c randfile.c rand_lib.c rand_err.c rand_egd.c \
-	rand_win.c rand_unix.c rand_os2.c rand_nw.c
+	rand_amiga.c rand_win.c rand_unix.c rand_os2.c rand_nw.c
 LIBOBJ=md_rand.o randfile.o rand_lib.o rand_err.o rand_egd.o \
-	rand_win.o rand_unix.o rand_os2.o rand_nw.o
+	rand_amiga.o rand_win.o rand_unix.o rand_os2.o rand_nw.o
 
 SRC= $(LIBSRC)
 
@@ -155,6 +155,7 @@ rand_win.o: ../../include/openssl/rand.h ../../include/openssl/safestack.h
 rand_win.o: ../../include/openssl/sha.h ../../include/openssl/stack.h
 rand_win.o: ../../include/openssl/symhacks.h ../cryptlib.h rand_lcl.h
 rand_win.o: rand_win.c
+rand_amiga.o: rand_amiga.c
 randfile.o: ../../e_os.h ../../include/openssl/buffer.h
 randfile.o: ../../include/openssl/crypto.h ../../include/openssl/e_os2.h
 randfile.o: ../../include/openssl/opensslconf.h
diff --git a/crypto/rand/rand_amiga.c b/crypto/rand/rand_amiga.c
new file mode 100644
index 0000000000000000000000000000000000000000..24e167e603597a3d1d7edac931e6fc47528ace2d
--- /dev/null
+++ b/crypto/rand/rand_amiga.c
@@ -0,0 +1,182 @@
+/* Based on the correspondingly named file in AmiSSL */
+
+#ifdef OPENSSL_SYSNAME_AMIGAOS
+
+#include <string.h>
+
+#include <openssl/rand.h>
+#include <openssl/sha.h>
+#include "rand_lcl.h"
+
+#ifdef __amigaos4__
+#define __USE_INLINE__
+#define TIMEVAL(x) x
+#endif
+
+#include <proto/exec.h>
+#include <proto/timer.h>
+#include <devices/timer.h>
+
+/* Maximum number of attempts to get a delay of 1 microsecond that is not equal to 0 */
+#define MAX_ATTEMPTS 1000
+
+#ifdef __amigaos4__
+
+#ifdef CreateMsgPort
+#undef CreateMsgPort
+#endif
+#define CreateMsgPort() AllocSysObject(ASOT_PORT,NULL)
+#ifdef DeleteMsgPort
+#undef DeleteMsgPort
+#endif
+#define DeleteMsgPort(msgPort) FreeSysObject(ASOT_PORT,msgPort)
+#ifdef CreateIORequest
+#undef CreateIORequest
+#endif
+#define CreateIORequest(ioReplyPort,size) AllocSysObjectTags(ASOT_IOREQUEST,ASOIOR_ReplyPort,ioReplyPort,ASOIOR_Size,size,TAG_DONE)
+#ifdef DeleteIORequest
+#undef DeleteIORequest
+#endif
+#define DeleteIORequest(ioReq) FreeSysObject(ASOT_IOREQUEST,ioReq)
+
+#else
+
+#define GetInterface(a, b, c, d) 1
+#define DropInterface(x)
+
+#endif /* !__amigaos4__ */
+
+int RAND_poll(void)
+{
+	unsigned char temp_buffer[SHA_DIGEST_LENGTH], data_buffer[SHA_DIGEST_LENGTH];
+	struct MsgPort *port = NULL;
+	double entropy_added = 0;
+	struct TimeRequest *time_request = NULL;
+#ifdef __amigaos4__
+	struct IOStdReq *entropy_request = NULL;
+
+	if ((port = CreateMsgPort())
+	    && (entropy_request = (struct IOStdReq *)CreateIORequest(port, sizeof(*entropy_request))))
+	{
+		if (OpenDevice(TIMERNAME, UNIT_ENTROPY, (struct IORequest *)entropy_request, 0) == 0)
+		{
+			while(entropy_added < ENTROPY_NEEDED)
+			{
+				entropy_request->io_Command = TR_READENTROPY;
+				entropy_request->io_Data = &temp_buffer[0];
+				entropy_request->io_Length = sizeof(temp_buffer);
+
+				if (DoIO((struct IORequest *)entropy_request) == 0)
+				{
+					SHA1(&temp_buffer[0], sizeof(temp_buffer), &data_buffer[0]);
+					RAND_add(&data_buffer[0], sizeof(data_buffer), sizeof(data_buffer));
+					entropy_added += sizeof(data_buffer);
+				}
+				else
+					break;
+			}
+
+			CloseDevice((struct IORequest *)entropy_request);
+		}
+	}
+
+	DeleteIORequest((struct IORequest *)entropy_request);
+#endif /* __amigaos4__ */
+
+	/* The following block will be used on "classic" machines. It does not generate
+	 * a high degree of randomness, but it does the job since RAND_poll is
+	 * called only once by OpenSSL to generate a 32 byte seed.
+	 */
+	if (entropy_added < ENTROPY_NEEDED
+	    && (port || (port = CreateMsgPort()))
+	    && (time_request = (struct TimeRequest *)CreateIORequest(port, sizeof(*time_request))))
+	{
+		if (OpenDevice(TIMERNAME, UNIT_VBLANK, (struct IORequest *)time_request, 0) == 0)
+		{
+			#if defined(__amigaos4__)
+			struct TimerIFace *ITimer = NULL;
+			#endif
+			struct Device *TimerBase;
+
+			if ((TimerBase = time_request->Request.io_Device)
+			#if defined(__amigaos4__)
+			    && (ITimer = (struct TimerIFace *)GetInterface((struct Library *)TimerBase, "main", 1, NULL))
+			#endif
+			)
+			{
+				struct EClockVal curr_eclock;
+				ULONG prev_ev_lo = 0;
+				struct TimeVal tv;
+				int i, attempt;
+				BOOL aborted;
+
+				ReadEClock(&curr_eclock);
+				aborted = FALSE;
+
+				while(!aborted && entropy_added < ENTROPY_NEEDED)
+				{
+					for(i = 0;
+					    !aborted && i < (int)sizeof(temp_buffer) - (int)sizeof(ULONG);
+					    i++)
+					{
+						attempt = 0;
+
+						/* Ask for a one microsecond delay and measure the time
+						 * the delay actually took.
+						 */
+						do
+						{
+							time_request->Request.io_Command = TR_ADDREQUEST;
+							time_request->Time.Seconds = 0;
+							time_request->Time.Microseconds = 1;
+
+							if (DoIO((struct IORequest *)time_request) == 0)
+							{
+								prev_ev_lo = curr_eclock.ev_lo;
+								ReadEClock(&curr_eclock);
+
+								attempt++;
+							}
+							else
+								aborted = TRUE;
+						} while(!aborted && prev_ev_lo == 0 && attempt < MAX_ATTEMPTS);
+
+						if (attempt >= MAX_ATTEMPTS)
+							aborted = TRUE;
+
+						/* Since we are going for randomness, ev_hi is irrelevant */
+						temp_buffer[i] = (unsigned char)(curr_eclock.ev_lo - prev_ev_lo);
+					}
+
+					GetSysTime(TIMEVAL(&tv));
+
+					if (sizeof(temp_buffer) > sizeof(ULONG))
+						memcpy(&temp_buffer[sizeof(temp_buffer) - sizeof(ULONG)], &tv.Microseconds, sizeof(ULONG));
+
+					/* Shuffle the bits around and specify that about
+					 * one fourth of it adds to the entropy.
+					 */
+					if (!aborted)
+					{
+						SHA1(&temp_buffer[0], sizeof(temp_buffer), &data_buffer[0]);
+						RAND_add(&data_buffer[0], sizeof(data_buffer), (double)sizeof(data_buffer) / 4);
+						entropy_added += sizeof(data_buffer) / 4;
+					}
+				}
+			}
+
+			#if defined(__amigaos4__)
+			DropInterface((struct Interface *)ITimer);
+			#endif
+			CloseDevice((struct IORequest *)time_request);
+		}
+	}
+
+	DeleteIORequest((struct IORequest *)time_request);
+
+	DeleteMsgPort(port);
+
+	return(entropy_added >= ENTROPY_NEEDED);
+}
+
+#endif /* OPENSSL_SYS_AMIGA */
diff --git a/crypto/rand/rand_egd.c b/crypto/rand/rand_egd.c
index d53b916ebee87c7ae77700c2fb5464920ae12cc1..9f6a4e5ab75bd9fa9694845f102a1f24b112e689 100644
--- a/crypto/rand/rand_egd.c
+++ b/crypto/rand/rand_egd.c
@@ -95,7 +95,7 @@
  *   RAND_egd() is a wrapper for RAND_egd_bytes() with numbytes=255.
  */
 
-#if defined(OPENSSL_SYS_WIN32) || defined(OPENSSL_SYS_VMS) || defined(OPENSSL_SYS_MSDOS) || defined(OPENSSL_SYS_VXWORKS) || defined(OPENSSL_SYS_NETWARE) || defined(OPENSSL_SYS_VOS) || defined(OPENSSL_SYS_BEOS)
+#if defined(OPENSSL_SYS_WIN32) || defined(OPENSSL_SYS_VMS) || defined(OPENSSL_SYS_MSDOS) || defined(OPENSSL_SYS_VXWORKS) || defined(OPENSSL_SYS_NETWARE) || defined(OPENSSL_SYS_VOS) || defined(OPENSSL_SYS_BEOS) || defined(OPENSSL_SYSNAME_AMIGAOS)
 int RAND_query_egd_bytes(const char *path, unsigned char *buf, int bytes)
 	{
 	return(-1);
diff --git a/crypto/rand/rand_unix.c b/crypto/rand/rand_unix.c
index e3a65571c8dfcd0b5e6fdd19e82ee48ed80fbbae..4ca5b51e6b0400f7eefcb9cf4c92b9287cf30554 100644
--- a/crypto/rand/rand_unix.c
+++ b/crypto/rand/rand_unix.c
@@ -116,11 +116,13 @@
 #include <openssl/rand.h>
 #include "rand_lcl.h"
 
-#if !(defined(OPENSSL_SYS_WINDOWS) || defined(OPENSSL_SYS_WIN32) || defined(OPENSSL_SYS_VMS) || defined(OPENSSL_SYS_OS2) || defined(OPENSSL_SYS_VXWORKS) || defined(OPENSSL_SYS_NETWARE))
+#if !(defined(OPENSSL_SYS_WINDOWS) || defined(OPENSSL_SYS_WIN32) || defined(OPENSSL_SYS_VMS) || defined(OPENSSL_SYS_OS2) || defined(OPENSSL_SYS_VXWORKS) || defined(OPENSSL_SYS_NETWARE) || defined(OPENSSL_SYSNAME_AMIGAOS))
 
 #include <sys/types.h>
 #include <sys/time.h>
+#if !defined(OPENSSL_SYSNAME_AMIGAOS)
 #include <sys/times.h>
+#endif
 #include <sys/stat.h>
 #include <fcntl.h>
 #include <unistd.h>
diff --git a/crypto/txt_db/txt_db.c b/crypto/txt_db/txt_db.c
index 6f2ce3b5a499334a7dfc479253ffef41e9ea70aa..eb5d6d71be5544eb25f8212008decf3a55bd2a0e 100644
--- a/crypto/txt_db/txt_db.c
+++ b/crypto/txt_db/txt_db.c
@@ -156,7 +156,7 @@ TXT_DB *TXT_DB_read(BIO *in, int num)
 		*(p++)='\0';
 		if ((n != num) || (*f != '\0'))
 			{
-#if !defined(OPENSSL_NO_STDIO) && !defined(OPENSSL_SYS_WIN16)	/* temporary fix :-( */
+#if !defined(OPENSSL_NO_STDIO) && !defined(OPENSSL_SYS_WIN16) && !defined(OPENSSL_SYSNAME_AMIGAOS)	/* temporary fix :-( */
 			fprintf(stderr,"wrong number of fields on line %ld (looking for field %d, got %d, '%s' left)\n",ln,num,n,f);
 #endif
 			er=2;
@@ -165,7 +165,7 @@ TXT_DB *TXT_DB_read(BIO *in, int num)
 		pp[n]=p;
 		if (!sk_OPENSSL_PSTRING_push(ret->data,pp))
 			{
-#if !defined(OPENSSL_NO_STDIO) && !defined(OPENSSL_SYS_WIN16)	/* temporary fix :-( */
+#if !defined(OPENSSL_NO_STDIO) && !defined(OPENSSL_SYS_WIN16) && !defined(OPENSSL_SYSNAME_AMIGAOS)	/* temporary fix :-( */
 			fprintf(stderr,"failure in sk_push\n");
 #endif
 			er=2;
@@ -177,7 +177,7 @@ err:
 	BUF_MEM_free(buf);
 	if (er)
 		{
-#if !defined(OPENSSL_NO_STDIO) && !defined(OPENSSL_SYS_WIN16)
+#if !defined(OPENSSL_NO_STDIO) && !defined(OPENSSL_SYS_WIN16) && !defined(OPENSSL_SYSNAME_AMIGAOS)
 		if (er == 1) fprintf(stderr,"OPENSSL_malloc failure\n");
 #endif
 		if (ret != NULL)
diff --git a/crypto/ui/ui_openssl.c b/crypto/ui/ui_openssl.c
index a38c7581e6a0ca10376d05fc9994f4c74a41128a..f1f140765b934d56c16fa8c0b4ef8f6b7bb4fe8a 100644
--- a/crypto/ui/ui_openssl.c
+++ b/crypto/ui/ui_openssl.c
@@ -220,6 +220,12 @@
 #undef SGTTY
 #endif
 
+#if defined(OPENSSL_SYSNAME_AMIGAOS)
+#undef TERMIOS
+#undef TERMIO
+#undef SGTTY
+#endif
+
 #ifdef TERMIOS
 # include <termios.h>
 # define TTY_STRUCT		struct termios
@@ -296,7 +302,7 @@ static long tty_orig[3], tty_new[3]; /* XXX   Is there any guarantee that this w
 static long status;
 static unsigned short channel = 0;
 #else
-#if !defined(OPENSSL_SYS_MSDOS) || defined(__DJGPP__)
+#if (!defined(OPENSSL_SYS_MSDOS) && !defined(OPENSSL_SYSNAME_AMIGAOS)) || defined(__DJGPP__)
 static TTY_STRUCT tty_orig,tty_new;
 #endif
 #endif
diff --git a/ssl/ssl_sess.c b/ssl/ssl_sess.c
index 235f92d824cd1e38bb4da59c55c49041e36c8379..61f5b55ee2fd4d4269a025a4101c413bdfb51149 100644
--- a/ssl/ssl_sess.c
+++ b/ssl/ssl_sess.c
@@ -507,7 +507,8 @@ int ssl_get_prev_session(SSL *s, unsigned char *session_id, int len,
 		try_session_cache = 0;
 		break;
 	default:
-		abort();
+		//abort();
+		break;
 		}
 #endif
 
diff --git a/ssl/t1_enc.c b/ssl/t1_enc.c
index 1308c0344feafb76ff84187ad36f7c5f39ae6a4f..9c142ae4ec902c94bb002619af543dc78f830a2a 100644
--- a/ssl/t1_enc.c
+++ b/ssl/t1_enc.c
@@ -713,12 +713,16 @@ int tls1_enc(SSL *s, int send)
 			if (ivlen > 1)
 				{
 				if ( rec->data != rec->input)
+					{
 					/* we can't write into the input stream:
 					 * Can this ever happen?? (steve)
 					 */
+#if !defined(OPENSSL_SYSNAME_AMIGAOS)
 					fprintf(stderr,
 						"%s:%d: rec->data != rec->input\n",
 						__FILE__, __LINE__);
+#endif
+					}
 				else if (RAND_bytes(rec->input, ivlen) <= 0)
 					return -1;
 				}
-- 
2.1.4

