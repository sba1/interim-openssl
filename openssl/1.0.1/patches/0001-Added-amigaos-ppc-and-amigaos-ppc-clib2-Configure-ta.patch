From 02e06ca9249ff144e7db3d064e4ea4c4993714a6 Mon Sep 17 00:00:00 2001
From: Sebastian Bauer <mail@sebastianbauer.info>
Date: Tue, 9 Dec 2014 20:21:18 +0100
Subject: [PATCH] Added "amigaos-ppc" and "amigaos-ppc-clib2" Configure target.

Also applied some modifications for a possible AmigaOS port
targeting version 4.1. Some are based on AmiSSL.
---
 Configure                |   3 +
 apps/apps.c              |   2 +-
 apps/ca.c                |   2 +-
 crypto/cryptlib.c        |   4 +-
 crypto/cryptlib.h        |   5 ++
 crypto/pkcs7/bio_pk7.c   |   2 +-
 crypto/rand/Makefile     |   5 +-
 crypto/rand/rand_amiga.c | 182 +++++++++++++++++++++++++++++++++++++++++++++++
 crypto/rand/rand_egd.c   |   2 +-
 crypto/rand/rand_unix.c  |   2 +-
 crypto/txt_db/txt_db.c   |   6 +-
 crypto/ui/ui_openssl.c   |   8 ++-
 ssl/ssl_sess.c           |   4 +-
 ssl/t1_enc.c             |   5 +-
 14 files changed, 217 insertions(+), 15 deletions(-)
 create mode 100644 crypto/rand/rand_amiga.c

diff --git a/Configure b/Configure
index 60ec3783e605e35802dbae1ba825ff1c913fe407..116cc2891e3d72578b500dd3bd199f2a301a0963 100755
--- a/Configure
+++ b/Configure
@@ -405,12 +405,15 @@ my %table=(
 
 # Android: linux-* but without pointers to headers and libs.
 "android","gcc:-mandroid -I\$(ANDROID_DEV)/include -B\$(ANDROID_DEV)/lib -O3 -fomit-frame-pointer -Wall::-D_REENTRANT::-ldl:BN_LLONG RC4_CHAR RC4_CHUNK DES_INT DES_UNROLL BF_PTR:${no_asm}:dlfcn:linux-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
 "android-x86","gcc:-mandroid -I\$(ANDROID_DEV)/include -B\$(ANDROID_DEV)/lib -O3 -fomit-frame-pointer -Wall::-D_REENTRANT::-ldl:BN_LLONG ${x86_gcc_des} ${x86_gcc_opts}:".eval{my $asm=${x86_elf_asm};$asm=~s/:elf/:android/;$asm}.":dlfcn:linux-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
 "android-armv7","gcc:-march=armv7-a -mandroid -I\$(ANDROID_DEV)/include -B\$(ANDROID_DEV)/lib -O3 -fomit-frame-pointer -Wall::-D_REENTRANT::-ldl:BN_LLONG RC4_CHAR RC4_CHUNK DES_INT DES_UNROLL BF_PTR:${armv4_asm}:dlfcn:linux-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
 
+"amigaos-ppc","ppc-amigaos-gcc:-DOPENSSL_SYSNAME_AMIGAOS -DNO_FORK -DNO_SYS_UN_H -DNO_SYSLOG -DB_ENDIAN -DOPENSSL_NO_SPEED -O3 -fdata-sections -ffunction-sections -fomit-frame-pointer -Wall:::::BN_LLONG RC2_CHAR RC4_INDEX DES_INT DES_UNROLL:${no_asm}:dlfcn:bsd-gcc-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
+"amigaos-ppc-clib2","ppc-amigaos-gcc:-mcrt=clib2 -DNO_SYS_PARAM_H -DOPENSSL_SYSNAME_AMIGAOS -DNO_FORK -DNO_SYS_UN_H -DNO_SYSLOG -DB_ENDIAN -DOPENSSL_NO_SPEED -O3 -fdata-sections -ffunction-sections -fomit-frame-pointer -Wall:::::BN_LLONG RC2_CHAR RC4_INDEX DES_INT DES_UNROLL:${no_asm}:dlfcn:bsd-gcc-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
+
 #### *BSD [do see comment about ${BSDthreads} above!]
 "BSD-generic32","gcc:-O3 -fomit-frame-pointer -Wall::${BSDthreads}:::BN_LLONG RC2_CHAR RC4_INDEX DES_INT DES_UNROLL:${no_asm}:dlfcn:bsd-gcc-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
 "BSD-x86",	"gcc:-DL_ENDIAN -O3 -fomit-frame-pointer -Wall::${BSDthreads}:::BN_LLONG ${x86_gcc_des} ${x86_gcc_opts}:${x86_asm}:a.out:dlfcn:bsd-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
 "BSD-x86-elf",	"gcc:-DL_ENDIAN -O3 -fomit-frame-pointer -Wall::${BSDthreads}:::BN_LLONG ${x86_gcc_des} ${x86_gcc_opts}:${x86_elf_asm}:dlfcn:bsd-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
 "debug-BSD-x86-elf",	"gcc:-DL_ENDIAN -O3 -Wall -g::${BSDthreads}:::BN_LLONG ${x86_gcc_des} ${x86_gcc_opts}:${x86_elf_asm}:dlfcn:bsd-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
 "BSD-sparcv8",	"gcc:-DB_ENDIAN -O3 -mcpu=v8 -Wall::${BSDthreads}:::BN_LLONG RC2_CHAR RC4_INDEX DES_INT DES_UNROLL:${sparcv8_asm}:dlfcn:bsd-gcc-shared:-fPIC::.so.\$(SHLIB_MAJOR).\$(SHLIB_MINOR)",
diff --git a/apps/apps.c b/apps/apps.c
index 6801238348315c448f11b1a35870d07c83f3c7f5..5b0361ea001d446b817262346fb8c165dc149c08 100644
--- a/apps/apps.c
+++ b/apps/apps.c
@@ -2744,13 +2744,13 @@ double app_tminterval(int stop, int usertime)
         ret = (__int64)(tmstop.QuadPart - tmstart.QuadPart) * 1e-7;
     }
 
     return (ret);
 }
 
-#elif defined(OPENSSL_SYS_NETWARE)
+#elif defined(OPENSSL_SYS_NETWARE) || (defined(OPENSSL_SYSNAME_AMIGAOS) && defined(CLIB2))
 # include <time.h>
 
 double app_tminterval(int stop, int usertime)
 {
     double ret = 0;
     static clock_t tmstart;
diff --git a/apps/ca.c b/apps/ca.c
index 97ad0c1ffe96b55386756bbf4677a77bf0e0d73e..be0c0edf131e4b176a1d7a8aeae032e344fe863d 100644
--- a/apps/ca.c
+++ b/apps/ca.c
@@ -79,13 +79,13 @@
 # ifdef OPENSSL_SYS_VMS
 #  if defined(__DECC)
 #   include <unistd.h>
 #  else
 #   include <unixlib.h>
 #  endif
-# elif !defined(OPENSSL_SYS_VXWORKS) && !defined(OPENSSL_SYS_WINDOWS) && !defined(OPENSSL_SYS_NETWARE)
+# elif !defined(OPENSSL_SYS_VXWORKS) && !defined(OPENSSL_SYS_WINDOWS) && !defined(OPENSSL_SYS_NETWARE) && !defined(OPENSSL_SYSNAME_AMIGAOS)
 #  include <sys/file.h>
 # endif
 #endif
 
 #include "apps.h"
 
diff --git a/crypto/cryptlib.c b/crypto/cryptlib.c
index c654a5c84f2c6d53bd1159a20cdab6d6cb1f76a4..f95e387cbd3e82479931386061795c3199a3bb34 100644
--- a/crypto/cryptlib.c
+++ b/crypto/cryptlib.c
@@ -941,36 +941,38 @@ void OPENSSL_showfatal(const char *fmta, ...)
 #else
 void OPENSSL_showfatal(const char *fmta, ...)
 {
     va_list ap;
 
     va_start(ap, fmta);
-    vfprintf(stderr, fmta, ap);
+//    vfprintf(stderr, fmta, ap);
     va_end(ap);
 }
 
 int OPENSSL_isservice(void)
 {
     return 0;
 }
 #endif
 
 void OpenSSLDie(const char *file, int line, const char *assertion)
 {
+#if 0
     OPENSSL_showfatal
         ("%s(%d): OpenSSL internal error, assertion failed: %s\n", file, line,
          assertion);
 #if !defined(_WIN32) || defined(__CYGWIN__)
     abort();
 #else
     /*
      * Win32 abort() customarily shows a dialog, but we just did that...
      */
     raise(SIGABRT);
     _exit(3);
 #endif
+#endif
 }
 
 void *OPENSSL_stderr(void)
 {
     return stderr;
 }
diff --git a/crypto/cryptlib.h b/crypto/cryptlib.h
index fba180a6b2fb7b7e65b92ca1c88591569def6f30..1ed7d0b237578251a0465a9dd7f5175c0a86c7bb 100644
--- a/crypto/cryptlib.h
+++ b/crypto/cryptlib.h
@@ -81,12 +81,17 @@ extern "C" {
 
 # ifndef OPENSSL_SYS_VMS
 #  define X509_CERT_AREA          OPENSSLDIR
 #  define X509_CERT_DIR           OPENSSLDIR "/certs"
 #  define X509_CERT_FILE          OPENSSLDIR "/cert.pem"
 #  define X509_PRIVATE_DIR        OPENSSLDIR "/private"
+# elif defined(OPENSSL_SYSNAME_AMIGAOS)
+#  define X509_CERT_AREA	"AmiSSL:"
+#  define X509_CERT_DIR		"AmiSSL:certs"
+#  define X509_CERT_FILE	"AmiSSL:cert.pem"
+#  define X509_PRIVATE_DIR	"AmiSSL:private"
 # else
 #  define X509_CERT_AREA          "SSLROOT:[000000]"
 #  define X509_CERT_DIR           "SSLCERTS:"
 #  define X509_CERT_FILE          "SSLCERTS:cert.pem"
 #  define X509_PRIVATE_DIR        "SSLPRIVATE:"
 # endif
diff --git a/crypto/pkcs7/bio_pk7.c b/crypto/pkcs7/bio_pk7.c
index fae1c564c48d385d7572507776406093d6433de2..da92a97e48a812e49cbe8dd15eea4f67bb94b47b 100644
--- a/crypto/pkcs7/bio_pk7.c
+++ b/crypto/pkcs7/bio_pk7.c
@@ -54,13 +54,13 @@
  */
 
 #include <openssl/asn1.h>
 #include <openssl/pkcs7.h>
 #include <openssl/bio.h>
 
-#if !defined(OPENSSL_SYSNAME_NETWARE) && !defined(OPENSSL_SYSNAME_VXWORKS)
+#if !defined(OPENSSL_SYSNAME_NETWARE) && !defined(OPENSSL_SYSNAME_VXWORKS) && !defined(OPENSSL_SYSNAME_AMIGAOS)
 # include <memory.h>
 #endif
 #include <stdio.h>
 
 /* Streaming encode support for PKCS#7 */
 
diff --git a/crypto/rand/Makefile b/crypto/rand/Makefile
index df44369a0823774ec3e244d80087f82c215a1d01..0e4349b0d1869e10dc65d069f229048350cad59a 100644
--- a/crypto/rand/Makefile
+++ b/crypto/rand/Makefile
@@ -15,15 +15,15 @@ CFLAGS= $(INCLUDES) $(CFLAG)
 GENERAL=Makefile
 TEST= randtest.c
 APPS=
 
 LIB=$(TOP)/libcrypto.a
 LIBSRC=md_rand.c randfile.c rand_lib.c rand_err.c rand_egd.c \
-	rand_win.c rand_unix.c rand_os2.c rand_nw.c
+	rand_amiga.c rand_win.c rand_unix.c rand_os2.c rand_nw.c
 LIBOBJ=md_rand.o randfile.o rand_lib.o rand_err.o rand_egd.o \
-	rand_win.o rand_unix.o rand_os2.o rand_nw.o
+	rand_amiga.o rand_win.o rand_unix.o rand_os2.o rand_nw.o
 
 SRC= $(LIBSRC)
 
 EXHEADER= rand.h
 HEADER=	$(EXHEADER)
 
@@ -154,12 +154,13 @@ rand_win.o: ../../include/openssl/lhash.h ../../include/openssl/obj_mac.h
 rand_win.o: ../../include/openssl/objects.h ../../include/openssl/opensslconf.h
 rand_win.o: ../../include/openssl/opensslv.h ../../include/openssl/ossl_typ.h
 rand_win.o: ../../include/openssl/rand.h ../../include/openssl/safestack.h
 rand_win.o: ../../include/openssl/sha.h ../../include/openssl/stack.h
 rand_win.o: ../../include/openssl/symhacks.h ../cryptlib.h rand_lcl.h
 rand_win.o: rand_win.c
+rand_amiga.o: rand_amiga.c
 randfile.o: ../../e_os.h ../../include/openssl/buffer.h
 randfile.o: ../../include/openssl/crypto.h ../../include/openssl/e_os2.h
 randfile.o: ../../include/openssl/opensslconf.h
 randfile.o: ../../include/openssl/opensslv.h ../../include/openssl/ossl_typ.h
 randfile.o: ../../include/openssl/rand.h ../../include/openssl/safestack.h
 randfile.o: ../../include/openssl/stack.h ../../include/openssl/symhacks.h
diff --git a/crypto/rand/rand_amiga.c b/crypto/rand/rand_amiga.c
new file mode 100644
index 0000000000000000000000000000000000000000..24e167e603597a3d1d7edac931e6fc47528ace2d
--- /dev/null
+++ b/crypto/rand/rand_amiga.c
@@ -0,0 +1,182 @@
+/* Based on the correspondingly named file in AmiSSL */
+
+#ifdef OPENSSL_SYSNAME_AMIGAOS
+
+#include <string.h>
+
+#include <openssl/rand.h>
+#include <openssl/sha.h>
+#include "rand_lcl.h"
+
+#ifdef __amigaos4__
+#define __USE_INLINE__
+#define TIMEVAL(x) x
+#endif
+
+#include <proto/exec.h>
+#include <proto/timer.h>
+#include <devices/timer.h>
+
+/* Maximum number of attempts to get a delay of 1 microsecond that is not equal to 0 */
+#define MAX_ATTEMPTS 1000
+
+#ifdef __amigaos4__
+
+#ifdef CreateMsgPort
+#undef CreateMsgPort
+#endif
+#define CreateMsgPort() AllocSysObject(ASOT_PORT,NULL)
+#ifdef DeleteMsgPort
+#undef DeleteMsgPort
+#endif
+#define DeleteMsgPort(msgPort) FreeSysObject(ASOT_PORT,msgPort)
+#ifdef CreateIORequest
+#undef CreateIORequest
+#endif
+#define CreateIORequest(ioReplyPort,size) AllocSysObjectTags(ASOT_IOREQUEST,ASOIOR_ReplyPort,ioReplyPort,ASOIOR_Size,size,TAG_DONE)
+#ifdef DeleteIORequest
+#undef DeleteIORequest
+#endif
+#define DeleteIORequest(ioReq) FreeSysObject(ASOT_IOREQUEST,ioReq)
+
+#else
+
+#define GetInterface(a, b, c, d) 1
+#define DropInterface(x)
+
+#endif /* !__amigaos4__ */
+
+int RAND_poll(void)
+{
+	unsigned char temp_buffer[SHA_DIGEST_LENGTH], data_buffer[SHA_DIGEST_LENGTH];
+	struct MsgPort *port = NULL;
+	double entropy_added = 0;
+	struct TimeRequest *time_request = NULL;
+#ifdef __amigaos4__
+	struct IOStdReq *entropy_request = NULL;
+
+	if ((port = CreateMsgPort())
+	    && (entropy_request = (struct IOStdReq *)CreateIORequest(port, sizeof(*entropy_request))))
+	{
+		if (OpenDevice(TIMERNAME, UNIT_ENTROPY, (struct IORequest *)entropy_request, 0) == 0)
+		{
+			while(entropy_added < ENTROPY_NEEDED)
+			{
+				entropy_request->io_Command = TR_READENTROPY;
+				entropy_request->io_Data = &temp_buffer[0];
+				entropy_request->io_Length = sizeof(temp_buffer);
+
+				if (DoIO((struct IORequest *)entropy_request) == 0)
+				{
+					SHA1(&temp_buffer[0], sizeof(temp_buffer), &data_buffer[0]);
+					RAND_add(&data_buffer[0], sizeof(data_buffer), sizeof(data_buffer));
+					entropy_added += sizeof(data_buffer);
+				}
+				else
+					break;
+			}
+
+			CloseDevice((struct IORequest *)entropy_request);
+		}
+	}
+
+	DeleteIORequest((struct IORequest *)entropy_request);
+#endif /* __amigaos4__ */
+
+	/* The following block will be used on "classic" machines. It does not generate
+	 * a high degree of randomness, but it does the job since RAND_poll is
+	 * called only once by OpenSSL to generate a 32 byte seed.
+	 */
+	if (entropy_added < ENTROPY_NEEDED
+	    && (port || (port = CreateMsgPort()))
+	    && (time_request = (struct TimeRequest *)CreateIORequest(port, sizeof(*time_request))))
+	{
+		if (OpenDevice(TIMERNAME, UNIT_VBLANK, (struct IORequest *)time_request, 0) == 0)
+		{
+			#if defined(__amigaos4__)
+			struct TimerIFace *ITimer = NULL;
+			#endif
+			struct Device *TimerBase;
+
+			if ((TimerBase = time_request->Request.io_Device)
+			#if defined(__amigaos4__)
+			    && (ITimer = (struct TimerIFace *)GetInterface((struct Library *)TimerBase, "main", 1, NULL))
+			#endif
+			)
+			{
+				struct EClockVal curr_eclock;
+				ULONG prev_ev_lo = 0;
+				struct TimeVal tv;
+				int i, attempt;
+				BOOL aborted;
+
+				ReadEClock(&curr_eclock);
+				aborted = FALSE;
+
+				while(!aborted && entropy_added < ENTROPY_NEEDED)
+				{
+					for(i = 0;
+					    !aborted && i < (int)sizeof(temp_buffer) - (int)sizeof(ULONG);
+					    i++)
+					{
+						attempt = 0;
+
+						/* Ask for a one microsecond delay and measure the time
+						 * the delay actually took.
+						 */
+						do
+						{
+							time_request->Request.io_Command = TR_ADDREQUEST;
+							time_request->Time.Seconds = 0;
+							time_request->Time.Microseconds = 1;
+
+							if (DoIO((struct IORequest *)time_request) == 0)
+							{
+								prev_ev_lo = curr_eclock.ev_lo;
+								ReadEClock(&curr_eclock);
+
+								attempt++;
+							}
+							else
+								aborted = TRUE;
+						} while(!aborted && prev_ev_lo == 0 && attempt < MAX_ATTEMPTS);
+
+						if (attempt >= MAX_ATTEMPTS)
+							aborted = TRUE;
+
+						/* Since we are going for randomness, ev_hi is irrelevant */
+						temp_buffer[i] = (unsigned char)(curr_eclock.ev_lo - prev_ev_lo);
+					}
+
+					GetSysTime(TIMEVAL(&tv));
+
+					if (sizeof(temp_buffer) > sizeof(ULONG))
+						memcpy(&temp_buffer[sizeof(temp_buffer) - sizeof(ULONG)], &tv.Microseconds, sizeof(ULONG));
+
+					/* Shuffle the bits around and specify that about
+					 * one fourth of it adds to the entropy.
+					 */
+					if (!aborted)
+					{
+						SHA1(&temp_buffer[0], sizeof(temp_buffer), &data_buffer[0]);
+						RAND_add(&data_buffer[0], sizeof(data_buffer), (double)sizeof(data_buffer) / 4);
+						entropy_added += sizeof(data_buffer) / 4;
+					}
+				}
+			}
+
+			#if defined(__amigaos4__)
+			DropInterface((struct Interface *)ITimer);
+			#endif
+			CloseDevice((struct IORequest *)time_request);
+		}
+	}
+
+	DeleteIORequest((struct IORequest *)time_request);
+
+	DeleteMsgPort(port);
+
+	return(entropy_added >= ENTROPY_NEEDED);
+}
+
+#endif /* OPENSSL_SYS_AMIGA */
diff --git a/crypto/rand/rand_egd.c b/crypto/rand/rand_egd.c
index 737aebfa22fe4aa7c385d79b55ad62134bbe6b49..03d6d0fe31d5d60630bc314d1db0f0d2859d1a81 100644
--- a/crypto/rand/rand_egd.c
+++ b/crypto/rand/rand_egd.c
@@ -92,13 +92,13 @@
  *
  * RAND_egd(path) will query 255 bytes and use the bytes retreived to seed
  *   the PRNG.
  *   RAND_egd() is a wrapper for RAND_egd_bytes() with numbytes=255.
  */
 
-#if defined(OPENSSL_SYS_WIN32) || defined(OPENSSL_SYS_VMS) || defined(OPENSSL_SYS_MSDOS) || defined(OPENSSL_SYS_VXWORKS) || defined(OPENSSL_SYS_NETWARE) || defined(OPENSSL_SYS_VOS) || defined(OPENSSL_SYS_BEOS)
+#if defined(OPENSSL_SYS_WIN32) || defined(OPENSSL_SYS_VMS) || defined(OPENSSL_SYS_MSDOS) || defined(OPENSSL_SYS_VXWORKS) || defined(OPENSSL_SYS_NETWARE) || defined(OPENSSL_SYS_VOS) || defined(OPENSSL_SYS_BEOS) || defined(OPENSSL_SYSNAME_AMIGAOS)
 int RAND_query_egd_bytes(const char *path, unsigned char *buf, int bytes)
 {
     return (-1);
 }
 
 int RAND_egd(const char *path)
diff --git a/crypto/rand/rand_unix.c b/crypto/rand/rand_unix.c
index 266111edda8c1d1d7bcfe2aa62a81c6ca6ffb4e3..366bf4dec75e29587ac43def8c89ea8017308457 100644
--- a/crypto/rand/rand_unix.c
+++ b/crypto/rand/rand_unix.c
@@ -113,13 +113,13 @@
 #define USE_SOCKETS
 #include "e_os.h"
 #include "cryptlib.h"
 #include <openssl/rand.h>
 #include "rand_lcl.h"
 
-#if !(defined(OPENSSL_SYS_WINDOWS) || defined(OPENSSL_SYS_WIN32) || defined(OPENSSL_SYS_VMS) || defined(OPENSSL_SYS_OS2) || defined(OPENSSL_SYS_VXWORKS) || defined(OPENSSL_SYS_NETWARE))
+#if !(defined(OPENSSL_SYS_WINDOWS) || defined(OPENSSL_SYS_WIN32) || defined(OPENSSL_SYS_VMS) || defined(OPENSSL_SYS_OS2) || defined(OPENSSL_SYS_VXWORKS) || defined(OPENSSL_SYS_NETWARE) || defined(OPENSSL_SYSNAME_AMIGAOS))
 
 # include <sys/types.h>
 # include <sys/time.h>
 # include <sys/times.h>
 # include <sys/stat.h>
 # include <fcntl.h>
diff --git a/crypto/txt_db/txt_db.c b/crypto/txt_db/txt_db.c
index f9b42ac6e5880c0aaf387d7d3018ece09a16ca72..5f662073610a04a95e037096619b2a49a9ca50ec 100644
--- a/crypto/txt_db/txt_db.c
+++ b/crypto/txt_db/txt_db.c
@@ -153,36 +153,36 @@ TXT_DB *TXT_DB_read(BIO *in, int num)
             }
             esc = (*f == '\\');
             *(p++) = *(f++);
         }
         *(p++) = '\0';
         if ((n != num) || (*f != '\0')) {
-#if !defined(OPENSSL_NO_STDIO) && !defined(OPENSSL_SYS_WIN16) /* temporary
+#if !defined(OPENSSL_NO_STDIO) && !defined(OPENSSL_SYS_WIN16) && !defined(OPENSSL_SYSNAME_AMIGAOS) /* temporary
                                                                * fix :-( */
             fprintf(stderr,
                     "wrong number of fields on line %ld (looking for field %d, got %d, '%s' left)\n",
                     ln, num, n, f);
 #endif
             er = 2;
             goto err;
         }
         pp[n] = p;
         if (!sk_OPENSSL_PSTRING_push(ret->data, pp)) {
-#if !defined(OPENSSL_NO_STDIO) && !defined(OPENSSL_SYS_WIN16) /* temporary
+#if !defined(OPENSSL_NO_STDIO) && !defined(OPENSSL_SYS_WIN16) && !defined(OPENSSL_SYSNAME_AMIGAOS) /* temporary
                                                                * fix :-( */
             fprintf(stderr, "failure in sk_push\n");
 #endif
             er = 2;
             goto err;
         }
     }
     er = 0;
  err:
     BUF_MEM_free(buf);
     if (er) {
-#if !defined(OPENSSL_NO_STDIO) && !defined(OPENSSL_SYS_WIN16)
+#if !defined(OPENSSL_NO_STDIO) && !defined(OPENSSL_SYS_WIN16) && !defined(OPENSSL_SYSNAME_AMIGAOS)
         if (er == 1)
             fprintf(stderr, "OPENSSL_malloc failure\n");
 #endif
         if (ret != NULL) {
             if (ret->data != NULL)
                 sk_OPENSSL_PSTRING_free(ret->data);
diff --git a/crypto/ui/ui_openssl.c b/crypto/ui/ui_openssl.c
index 829ea8691eb5798100ff16879b83e0e638f56b3a..034ea7dea6a05d515c154f3534503cddd0f00175 100644
--- a/crypto/ui/ui_openssl.c
+++ b/crypto/ui/ui_openssl.c
@@ -215,12 +215,18 @@
 #  undef  TERMIO
 #  undef  SGTTY
 # endif
 
 #endif
 
+#if defined(OPENSSL_SYSNAME_AMIGAOS)
+#undef TERMIOS
+#undef TERMIO
+#undef SGTTY
+#endif
+
 #ifdef TERMIOS
 # include <termios.h>
 # define TTY_STRUCT             struct termios
 # define TTY_FLAGS              c_lflag
 # define TTY_get(tty,data)      tcgetattr(tty,data)
 # define TTY_set(tty,data)      tcsetattr(tty,TCSANOW,data)
@@ -292,13 +298,13 @@ static $DESCRIPTOR(terminal, "TT");
 static long tty_orig[3], tty_new[3]; /* XXX Is there any guarantee that this
                                       * will always suffice for the actual
                                       * structures? */
 static long status;
 static unsigned short channel = 0;
 #else
-# if !defined(OPENSSL_SYS_MSDOS) || defined(__DJGPP__)
+# if (!defined(OPENSSL_SYS_MSDOS) && !defined(OPENSSL_SYSNAME_AMIGAOS)) || defined(__DJGPP__)
 static TTY_STRUCT tty_orig, tty_new;
 # endif
 #endif
 static FILE *tty_in, *tty_out;
 static int is_a_tty;
 
diff --git a/ssl/ssl_sess.c b/ssl/ssl_sess.c
index 1ad9dc79493c448f1d757e63fbec1a0cd2036516..bfdf48d079234504a022627737f48d021f9128c4 100644
--- a/ssl/ssl_sess.c
+++ b/ssl/ssl_sess.c
@@ -624,14 +624,14 @@ int ssl_get_prev_session(SSL *s, unsigned char *session_id, int len,
     case 1:                    /* Zero length ticket found */
         break;                  /* Ok to carry on processing session id. */
     case 2:                    /* Ticket found but not decrypted. */
     case 3:                    /* Ticket decrypted, *ret has been set. */
         try_session_cache = 0;
         break;
-    default:
-        abort();
+//    default:
+//        abort();
     }
 #endif
 
     if (try_session_cache &&
         ret == NULL &&
         !(s->session_ctx->session_cache_mode &
diff --git a/ssl/t1_enc.c b/ssl/t1_enc.c
index 8f45294e5579a540f7ffb9bfa1d4025efb591339..707024447cfb7e5705f276265be329e843b29433 100644
--- a/ssl/t1_enc.c
+++ b/ssl/t1_enc.c
@@ -744,20 +744,23 @@ int tls1_enc(SSL *s, int send)
             if (s->version >= TLS1_1_VERSION
                 && EVP_CIPHER_mode(enc) == EVP_CIPH_CBC_MODE)
                 ivlen = EVP_CIPHER_iv_length(enc);
             else
                 ivlen = 0;
             if (ivlen > 1) {
-                if (rec->data != rec->input)
+                if (rec->data != rec->input) {
                     /*
                      * we can't write into the input stream: Can this ever
                      * happen?? (steve)
                      */
+#if !defined(OPENSSL_SYSNAME_AMIGAOS)
                     fprintf(stderr,
                             "%s:%d: rec->data != rec->input\n",
                             __FILE__, __LINE__);
+#endif
+                }
                 else if (RAND_bytes(rec->input, ivlen) <= 0)
                     return -1;
             }
         }
     } else {
         if (EVP_MD_CTX_md(s->read_hash)) {
-- 
2.1.4

